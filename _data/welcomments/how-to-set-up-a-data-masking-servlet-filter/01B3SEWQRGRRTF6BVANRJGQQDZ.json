{
  "id": "01B3SEWQRGRRTF6BVANRJGQQDZ",
  "date": "2016-12-12T14:07:38.000",
  "author": {
    "name": "Jonathan Rehm"
  },
  "message": "Colton,\r\n\r\nThanks for the excellent blog posts. They've inspired me to find new and interesting ways to use servlets.\r\n\r\nFor my purposes, disabling compression isn't an option (clients aren't necessarily going to be on board with that) so I had to figure out how to make it work with compression enabled. I was able to do so by first decompressing the output, making my change, then recompressing it. Unfortunate waste of CPU cycles, but I was not able to figure out a way to get my manipulation to happen before the initial gzip occurs (appears to happen in `psft.pt8.util.PSHttpUtil getOutputStream`).\r\n\r\nSo the final code looks like:\r\n\r\n```\r\nbyte[] bytes = responseWrapper.getByteArray();\r\n\r\n// Get content encoding\r\nString contentEncoding = responseWrapper.getHeader(\"Content-Encoding\");\r\nif (contentEncoding == null) {\r\n    contentEncoding = \"\";\r\n}\r\n\r\nString html;\r\n\r\n// Decompress\r\nif (contentEncoding.equals(\"gzip\")) {\r\n    GZIPInputStream gzip = new GZIPInputStream(new ByteArrayInputStream(bytes));\r\n    BufferedReader reader = new BufferedReader(new InputStreamReader(gzip, \"UTF-8\"));\r\n    StringBuilder builder = new StringBuilder();\r\n    String line;\r\n    while ((line = reader.readLine()) != null) {\r\n        builder.append(line);\r\n        builder.append(\"\\n\");\r\n    }\r\n    html = builder.toString();\r\n} else {\r\n    html = new String(bytes);\r\n}\r\n\r\n// do manipulations...\r\n\r\n// Compress\r\nif (contentEncoding.equals(\"gzip\")) {\r\n    ByteArrayOutputStream outputStream = new ByteArrayOutputStream();\r\n    GZIPOutputStream gzip = new GZIPOutputStream(outputStream);\r\n    gzip.write(html.getBytes());\r\n    gzip.close();\r\n\r\n    newBytes = outputStream.toByteArray();\r\n} else {\r\n    newBytes = html.getBytes();\r\n}\r\n\r\n// Update the content length and output the manipulated HTML\r\nres.setContentLength(newBytes.length);\r\nres.getOutputStream().write(newBytes);\r\n```",
  "migrated_fields": {
    "email": "2ee47b2412980b65e6e1b53dc354041c"
  }
}